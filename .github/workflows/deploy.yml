on:
  release:
    types: [published]

jobs:
  build_rust:
    name: release ${{ matrix.target }}
    runs-on: ubuntu-latest
    permissions:
      contents: write # release changes require contents write

    strategy:
      fail-fast: false
      matrix:
        target: 
        - x86_64-unknown-linux-musl
        - armv7-unknown-linux-gnueabihf
        - aarch64-unknown-linux-gnu
    
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: |
          rustup update stable
          rustup target add ${{ matrix.target }}

      - name: Compile
        run: |
          cargo build --release --target ${{ matrix.target }}
        env:
          SQLX_OFFLINE: true # needed to keep it from trying to connect to a database

      - name: Release
        run: |
          cd target/${{ matrix.target }}/release  
          tar czvf ../../../avprocessor-${{ matrix.target }}.tar.gz avprocessor
        
      - name: upload artifact
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release upload ${{ github.event.release.name }} avprocessor-${{ matrix.target }}.tar.gz

  build_ui:
    runs-on: ubuntu-latest
    permissions:
      contents: write # release changes require contents write
    defaults:
      run:
        working-directory: ./avprocessor-ui
    steps:
      - uses: actions/checkout@v4
      - name: install deps
        run: npm ci
      - name: compile
        run: npm run build

      - name: package
        run: tar czvf avprocessor-ui.tar.gz build
      
      - name: upload artifact
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          gh release upload ${{ github.event.release.name }} avprocessor-ui.tar.gz